// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package org.usfirst.frc6408.CogBot.commands;

import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc6408.CogBot.Robot;

//TODO: Test values to see if autocorrect is too much
public class MoveInches extends Command {
    private double inchesToMove;
    private double speed = 0.95;  //In percent.
    
    public MoveInches(double inchesToMove) {
        this.inchesToMove = inchesToMove;
        requires(Robot.driveTrain);
        requires(Robot.encoders);
    }

    protected void initialize() {
    	Robot.encoders.resetEncoders();  //Resets encoders to make sure they dont have any past values in them.
    }

    protected void execute() {
    	long leftDistance = Math.round(Robot.encoders.getLeftEncoder() * 100);  //Gets left encoder value to two decimal places
    	long rightDistance = Math.round(Robot.encoders.getRightEncoder() * 100);  //Gets right encoder value to two decimal places
    	
    	//Compares the two values, if one side has moved less than the other it speeds up a little bit.  
    	//If they are even then it stays the same.
    	//A type of autocorrect.
    	if(leftDistance < rightDistance) {  
    		Robot.driveTrain.driveMotors(speed + 0.05, speed);
    	}
    	else if(leftDistance > rightDistance) {
    		Robot.driveTrain.driveMotors(speed, speed + 0.05);
    	}
    	else {
    		Robot.driveTrain.driveMotors(speed, speed);
    	}
    }

    protected boolean isFinished() {
        return (Robot.encoders.getAverageDistance() >= inchesToMove) ? true : false;  //Checks if the robot has moved the required distance.
    }

    protected void end() {
    }

    protected void interrupted() {
    }
}
